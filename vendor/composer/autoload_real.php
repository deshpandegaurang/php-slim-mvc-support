<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit04509a899201a1b6da7cafadf4758dc8
=======
class ComposerAutoloaderInit7af6afe6a86f0235aa27b3fc29a4ed1b
>>>>>>> 15175a818315ee24d576e8ec8f94fd1a038de910
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit04509a899201a1b6da7cafadf4758dc8', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit04509a899201a1b6da7cafadf4758dc8', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit7af6afe6a86f0235aa27b3fc29a4ed1b', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit7af6afe6a86f0235aa27b3fc29a4ed1b', 'loadClassLoader'));
>>>>>>> 15175a818315ee24d576e8ec8f94fd1a038de910

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $map = require __DIR__ . '/autoload_psr4.php';
        foreach ($map as $namespace => $path) {
            $loader->setPsr4($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire04509a899201a1b6da7cafadf4758dc8($file)
=======
function composerRequire7af6afe6a86f0235aa27b3fc29a4ed1b($file)
>>>>>>> 15175a818315ee24d576e8ec8f94fd1a038de910
{
    require $file;
}
